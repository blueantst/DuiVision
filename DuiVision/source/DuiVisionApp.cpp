////////////////////////////////////////////////////////////////////////////
//	File:		DuiVisionApp.cpp
//	Version:	1.0.0.0
//	Created:	2017-02-12
//
//	Author:		blueant
//	E-mail:		script.net@gmail.com
//
//	Implementation of DuiVisionApp interface object.
////////////////////////////////////////////////////////////////////////////
// DuiVisionApp.cpp : implementation file
//

#include "stdafx.h"
#include "DuiVisionApp.h"
#include "DuiVision.h"

#ifdef _DEBUG
#define new DEBUG_NEW
#undef THIS_FILE
static char THIS_FILE[] = __FILE__;
#endif

/////////////////////////////////////////////////////////////////////////////
// CDuiVisionApp

CDuiVisionApp::CDuiVisionApp()
{
}

CDuiVisionApp::~CDuiVisionApp()
{
}

//////////////////////////////////////////////////////////////////////////
// 接口实现
//////////////////////////////////////////////////////////////////////////
INTERFACE_IMPLEMENT(DuiVisionApp)
CONTROL_INTERFACE_IMPLEMENT(DuiVisionApp)

/////////////////////////////////////////////////////////////////////////////
// CDuiVisionApp Interface handlers 具体操作

/////////////////////////////////////////////////////////////////////////////
// 获取应用程序名
/////////////////////////////////////////////////////////////////////////////
STDMETHODIMP_(CString)
CDuiVisionApp::XDuiVisionApp::GetAppName()
{
	return DuiSystem::Instance()->GetString(_T("APP_NAME"));
}

/////////////////////////////////////////////////////////////////////////////
// 获取平台路径
/////////////////////////////////////////////////////////////////////////////
STDMETHODIMP_(CString)
CDuiVisionApp::XDuiVisionApp::GetPlatPath()
{
	return DuiSystem::GetRootPath();
}

/////////////////////////////////////////////////////////////////////////////
// 获取平台版本
/////////////////////////////////////////////////////////////////////////////
STDMETHODIMP_(CString)
CDuiVisionApp::XDuiVisionApp::GetPlatVersion()
{
	return DuiSystem::Instance()->GetString(_T("APP_VER"));
}

/////////////////////////////////////////////////////////////////////////////
// 获取当前语言
/////////////////////////////////////////////////////////////////////////////
STDMETHODIMP_(int)
CDuiVisionApp::XDuiVisionApp::GetCurrentLanguage()
{
	return DuiSystem::Instance()->GetCurrentLanguage();
}

/////////////////////////////////////////////////////////////////////////////
// 获取平台注册表根路径
/////////////////////////////////////////////////////////////////////////////
STDMETHODIMP_(CString)
CDuiVisionApp::XDuiVisionApp::GetPlatRegistry()
{
	return DuiSystem::Instance()->GetConfig(_T("APP_REGISTRY"));
}

/////////////////////////////////////////////////////////////////////////////
// 获取平台版权字符串
/////////////////////////////////////////////////////////////////////////////
STDMETHODIMP_(CString)
CDuiVisionApp::XDuiVisionApp::GetPlatCopyRight()
{
	return DuiSystem::Instance()->GetString(_T("APP_COPYRIGHT"));
}

/////////////////////////////////////////////////////////////////////////////
// 获取主页URL
/////////////////////////////////////////////////////////////////////////////
STDMETHODIMP_(CString)
CDuiVisionApp::XDuiVisionApp::GetPlatHomeURL()
{
	return DuiSystem::Instance()->GetString(_T("APP_URL_HOME"));
}

/////////////////////////////////////////////////////////////////////////////
// 获取下载URL
/////////////////////////////////////////////////////////////////////////////
STDMETHODIMP_(CString)
CDuiVisionApp::XDuiVisionApp::GetPlatDownloadURL()
{
	return DuiSystem::Instance()->GetString(_T("APP_URL_DOWNLOAD"));
}

/////////////////////////////////////////////////////////////////////////////
// 发送消息
/////////////////////////////////////////////////////////////////////////////
STDMETHODIMP_(int)
CDuiVisionApp::XDuiVisionApp::SendMessage(CVciMessage* pIn, CVciMessage* ppOut)
{
	// 未实现
	return 0;
}

/////////////////////////////////////////////////////////////////////////////
// 平台的消息处理
/////////////////////////////////////////////////////////////////////////////
STDMETHODIMP_(int)
CDuiVisionApp::XDuiVisionApp::ProcessMessage(CVciMessage* pIn, CVciMessage* ppOut)
{
	// 未实现
	return 0;
}

/////////////////////////////////////////////////////////////////////////////
// 发送平台命令
/////////////////////////////////////////////////////////////////////////////
STDMETHODIMP_(int)
CDuiVisionApp::XDuiVisionApp::SendCommand(int nCmd, WPARAM wParam, LPARAM lParam)
{
	// 未实现
	return 0;
}

/////////////////////////////////////////////////////////////////////////////
// 发送平台命令
/////////////////////////////////////////////////////////////////////////////
STDMETHODIMP_(BOOL)
CDuiVisionApp::XDuiVisionApp::SendCommand(int nCmd, WPARAM wParam, LPARAM lParam, LPVOID lpResult)
{
	return FALSE;
}

/////////////////////////////////////////////////////////////////////////////
// 记录日志
/////////////////////////////////////////////////////////////////////////////
STDMETHODIMP_(void)
CDuiVisionApp::XDuiVisionApp::LogEvent(int nLevel, CString strInfo)
{
	CLogMgr::Instance()->LogEvent(nLevel, strInfo);
}

/////////////////////////////////////////////////////////////////////////////
// 记录日志(带模块信息)
/////////////////////////////////////////////////////////////////////////////
STDMETHODIMP_(void)
CDuiVisionApp::XDuiVisionApp::LogEventModule(int nLevel, CString strModule, CString strInfo)
{
	CLogMgr::Instance()->LogEventModule(nLevel, strModule, strInfo);
}

/////////////////////////////////////////////////////////////////////////////
// 是否支持DuiVision相关操作
/////////////////////////////////////////////////////////////////////////////
STDMETHODIMP_(BOOL)
CDuiVisionApp::XDuiVisionApp::IsEnableDuiVision()
{
	// 支持DuiVision操作
	return TRUE;
}

/////////////////////////////////////////////////////////////////////////////
// 获取DuiVision的resource目录
/////////////////////////////////////////////////////////////////////////////
STDMETHODIMP_(CString)
CDuiVisionApp::XDuiVisionApp::GetDuiResourcePath()
{
	return DuiSystem::GetSkinPath();
}

/////////////////////////////////////////////////////////////////////////////
// 加载XML资源文件(可以指定加载的风格)
/////////////////////////////////////////////////////////////////////////////
STDMETHODIMP_(BOOL)
CDuiVisionApp::XDuiVisionApp::DuiLoadResourceXml(CString strResFile, CString strStyle)
{
	return DuiSystem::Instance()->LoadResourceXml(strResFile, strStyle);
}

/////////////////////////////////////////////////////////////////////////////
// 获取系统配置信息
/////////////////////////////////////////////////////////////////////////////
STDMETHODIMP_(CString)
CDuiVisionApp::XDuiVisionApp::DuiGetConfig(CString strName)
{
	return DuiSystem::Instance()->GetConfig(strName);
}

/////////////////////////////////////////////////////////////////////////////
// 获取XML文件
/////////////////////////////////////////////////////////////////////////////
STDMETHODIMP_(CString)
CDuiVisionApp::XDuiVisionApp::DuiGetXmlFile(CString strName)
{
	return DuiSystem::Instance()->GetXmlFile(strName);
}

/////////////////////////////////////////////////////////////////////////////
// 获取Skin
/////////////////////////////////////////////////////////////////////////////
STDMETHODIMP_(CString)
CDuiVisionApp::XDuiVisionApp::DuiGetSkin(CString strName)
{
	return DuiSystem::Instance()->GetSkin(strName);
}

/////////////////////////////////////////////////////////////////////////////
// 获取字符串值
/////////////////////////////////////////////////////////////////////////////
STDMETHODIMP_(CString)
CDuiVisionApp::XDuiVisionApp::DuiGetString(CString strName)
{
	return DuiSystem::Instance()->GetString(strName);
}

/////////////////////////////////////////////////////////////////////////////
// 设置字符串值
/////////////////////////////////////////////////////////////////////////////
STDMETHODIMP_(void)
CDuiVisionApp::XDuiVisionApp::DuiSetString(CString strName, CString strValue)
{
	DuiSystem::Instance()->SetString(strName, strValue);
}

/////////////////////////////////////////////////////////////////////////////
// 解析字符串，替换其中的替换内容
/////////////////////////////////////////////////////////////////////////////
STDMETHODIMP_(void)
CDuiVisionApp::XDuiVisionApp::ParseDuiString(CString& strString)
{
	DuiSystem::Instance()->ParseDuiString(strString);
}

/////////////////////////////////////////////////////////////////////////////
// 注册控件
/////////////////////////////////////////////////////////////////////////////
STDMETHODIMP_(void)
CDuiVisionApp::XDuiVisionApp::RegisterDuiControl(CDuiObjectInfo* pDuiObjectInfo)
{
	DuiSystem::Instance()->RegisterDuiControl(pDuiObjectInfo);
}

/////////////////////////////////////////////////////////////////////////////
// 卸载控件
/////////////////////////////////////////////////////////////////////////////
STDMETHODIMP_(BOOL)
CDuiVisionApp::XDuiVisionApp::UnRegisterDuiControl(LPCTSTR lpszName)
{
	return DuiSystem::Instance()->UnRegisterDuiControl(lpszName);
}

/////////////////////////////////////////////////////////////////////////////
// 根据控件类名创建控件实例
/////////////////////////////////////////////////////////////////////////////
STDMETHODIMP_(CControlBase*)
CDuiVisionApp::XDuiVisionApp::DuiCreateControlByName(LPCTSTR lpszName, HWND hWnd, CDuiObject* pParentObject)
{
	return DuiSystem::CreateControlByName(lpszName, hWnd, pParentObject);
}

/////////////////////////////////////////////////////////////////////////////
// 获取子控件
/////////////////////////////////////////////////////////////////////////////
STDMETHODIMP_(CControlBase*)
CDuiVisionApp::XDuiVisionApp::DuiGetControl(CDuiObject* pDuiObject, CString strControlName)
{
	return DuiSystem::GetControl(pDuiObject, strControlName);
}

/////////////////////////////////////////////////////////////////////////////
// 获取对话框子控件
/////////////////////////////////////////////////////////////////////////////
STDMETHODIMP_(CControlBase*)
CDuiVisionApp::XDuiVisionApp::DuiGetDialogControl(CString strDialogName, CString strControlName)
{
	return DuiSystem::GetDialogControl(strDialogName, strControlName);
}

/////////////////////////////////////////////////////////////////////////////
// 给指定的DUI对象注册事件处理对象
/////////////////////////////////////////////////////////////////////////////
STDMETHODIMP_(BOOL)
CDuiVisionApp::XDuiVisionApp::RegisterDuiHandler(CDuiObject* pDuiObject, CDuiHandler* pDuiHandler, CString strControlName, BOOL bInit)
{
	return DuiSystem::RegisterHandler(pDuiObject, pDuiHandler, strControlName, bInit);
}

/////////////////////////////////////////////////////////////////////////////
// 添加DUI事件处理对象
/////////////////////////////////////////////////////////////////////////////
STDMETHODIMP_(void)
CDuiVisionApp::XDuiVisionApp::AddDuiHandler(CDuiHandler* pDuiHandler)
{
	DuiSystem::Instance()->AddDuiHandler(pDuiHandler);
}

/////////////////////////////////////////////////////////////////////////////
// 删除DUI事件处理对象
/////////////////////////////////////////////////////////////////////////////
STDMETHODIMP_(void)
CDuiVisionApp::XDuiVisionApp::RemoveDuiHandler(CDuiHandler* pDuiHandler)
{
	DuiSystem::Instance()->RemoveDuiHandler(pDuiHandler);
}

/////////////////////////////////////////////////////////////////////////////
// 创建DUI对话框
/////////////////////////////////////////////////////////////////////////////
STDMETHODIMP_(CDlgBase*)
CDuiVisionApp::XDuiVisionApp::CreateDuiDialog(LPCTSTR lpszXmlTemplate, CDuiObject* pParentObject, CString strName, BOOL bModule, BOOL bAdd)
{
	return DuiSystem::CreateDuiDialog(lpszXmlTemplate, pParentObject, strName, bModule, 0, bAdd);
}

/////////////////////////////////////////////////////////////////////////////
// 显示DUI对话框
/////////////////////////////////////////////////////////////////////////////
STDMETHODIMP_(int)
CDuiVisionApp::XDuiVisionApp::ShowDuiDialog(LPCTSTR lpszXmlTemplate, CDuiObject* pParentObject, CString strName, BOOL bModule)
{
	return DuiSystem::ShowDuiDialog(lpszXmlTemplate, pParentObject, strName, bModule);
}

/////////////////////////////////////////////////////////////////////////////
// 显示DUI MessageBox
/////////////////////////////////////////////////////////////////////////////
STDMETHODIMP_(int)
CDuiVisionApp::XDuiVisionApp::DuiMessageBox(CDuiObject* pParent, LPCTSTR lpszText, LPCTSTR lpszCaption, UINT uType, int nWidth, int nHeight)
{
	return DuiSystem::DuiMessageBox(pParent, lpszText, lpszCaption, uType, nWidth, nHeight);
}

/////////////////////////////////////////////////////////////////////////////
// 添加DUI对话框
/////////////////////////////////////////////////////////////////////////////
STDMETHODIMP_(void)
CDuiVisionApp::XDuiVisionApp::AddDuiDialog(CDlgBase* pDuiDialog)
{
	DuiSystem::Instance()->AddDuiDialog(pDuiDialog);
}

/////////////////////////////////////////////////////////////////////////////
// 删除DUI对话框
/////////////////////////////////////////////////////////////////////////////
STDMETHODIMP_(void)
CDuiVisionApp::XDuiVisionApp::RemoveDuiDialog(CDlgBase* pDuiDialog)
{
	DuiSystem::Instance()->RemoveDuiDialog(pDuiDialog);
}

/////////////////////////////////////////////////////////////////////////////
// 获取DUI对话框
/////////////////////////////////////////////////////////////////////////////
STDMETHODIMP_(CDlgBase*)
CDuiVisionApp::XDuiVisionApp::GetDuiDialog(CString strName)
{
	return DuiSystem::Instance()->GetDuiDialog(strName);
}

/////////////////////////////////////////////////////////////////////////////
// 添加提示窗口任务
/////////////////////////////////////////////////////////////////////////////
STDMETHODIMP_(void)
CDuiVisionApp::XDuiVisionApp::AddDuiNotifyMsgTask(CString strMsg, UINT uNotifyType, CString strCaption, int nDelayTime, int nWidth, int nHeight)
{
	return DuiSystem::AddDuiNotifyMsgTask(strMsg, uNotifyType, strCaption, nDelayTime, nWidth, nHeight);
}

/////////////////////////////////////////////////////////////////////////////
// 添加DUI定时器
/////////////////////////////////////////////////////////////////////////////
STDMETHODIMP_(UINT)
CDuiVisionApp::XDuiVisionApp::AddDuiTimer(UINT uTimerResolution, CString strTimerName)
{
	return DuiSystem::AddDuiTimer(uTimerResolution, strTimerName);
}

/////////////////////////////////////////////////////////////////////////////
// 删除DUI定时器
/////////////////////////////////////////////////////////////////////////////
STDMETHODIMP_(void)
CDuiVisionApp::XDuiVisionApp::RemoveDuiTimer(CString strTimerName)
{
	return DuiSystem::RemoveDuiTimer(strTimerName);
}